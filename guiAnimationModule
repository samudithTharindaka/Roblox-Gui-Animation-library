local TweenService = game:GetService("TweenService")

--[[ for sounds make the sounds childrens of the module
local hoverSound = script.hover -- Assuming the hover sound is stored in the script
function hover()
	hoverSound:Play
end
]]

local GuiEffectsModular = {}

-- Function to animate GUI object properties with transparency
function GuiEffectsModular.transparency(guiObject, property, value, duration)
    -- Define tweening information
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false)
    -- Create the tween
    local transparentTween = TweenService:Create(guiObject, tweenInfo, {[property] = value})
    -- Play the tween
    transparentTween:Play()
    -- Play hover sound
    hover()
end

-- Function to set up button effects
function GuiEffectsModular.setupButton(button,property,value,duration)
    -- Function called when mouse enters the button
    local function onButtonMouseEnter()
        GuiEffectsModular.transparency(button, property, value, duration) -- Apply transparency effect
    end

    -- Function called when mouse leaves the button
    local function onButtonMouseLeave()
        GuiEffectsModular.transparency(button, property, value, duration) -- Remove transparency effect
    end

    -- Function called when the button is clicked
    local function onMouseClick()
        -- Play click sound
        clickSound:Play()
        -- Apply a one-time scale effect
        GuiEffectsModular.transparency(button, property, value, duration)
    end

    -- Connect events to their respective functions
    button.MouseEnter:Connect(onButtonMouseEnter)
    button.MouseLeave:Connect(onButtonMouseLeave)
    button.MouseButton1Click:Connect(onMouseClick)
end

-- Return the module
return GuiEffectsModular
